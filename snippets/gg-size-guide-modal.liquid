<size-guide-modal id="SizeGuideModal-{{ section.id }}" class="gg-size-guide-modal">
  <div role="dialog" class="gg-size-guide-modal__content" tabindex="-1">
    <button type="button" class="gg-size-guide-modal__close" aria-label="{{ 'accessibility.close' | t }}">
        <svg xmlns="http://www.w3.org/2000/svg" width="33" height="33" viewBox="0 0 33 33" fill="none">
        <path d="M0 16.5C0 7.387 7.385 0 16.5 0 25.613 0 33 7.385 33 16.5 33 25.613 25.615 33 16.5 33 7.387 33 0 25.615 0 16.5zm16.5-1.166l-4.087-4.088a.765.765 0 0 0-.16-.124.876.876 0 0 0-.223-.091.863.863 0 0 0-.28-.02.676.676 0 0 0-.12.021.717.717 0 0 0-.15.055.758.758 0 0 0-.201.135.763.763 0 0 0-.109.119.852.852 0 0 0-.139.29.86.86 0 0 0-.022.28.895.895 0 0 0 .044.197.754.754 0 0 0 .09.18.936.936 0 0 0 .103.125l4.088 4.087-4.088 4.087a.765.765 0 0 0-.124.16.753.753 0 0 0-.091.223.893.893 0 0 0-.023.24.777.777 0 0 0 .062.274.81.81 0 0 0 .209.294.848.848 0 0 0 .352.19.86.86 0 0 0 .28.023.895.895 0 0 0 .197-.044.754.754 0 0 0 .18-.09.936.936 0 0 0 .125-.103l4.087-4.088 4.087 4.088a.965.965 0 0 0 .125.102.855.855 0 0 0 .297.122.893.893 0 0 0 .241.011.676.676 0 0 0 .12-.021.776.776 0 0 0 .256-.115.777.777 0 0 0 .179-.162.851.851 0 0 0 .153-.283 1.022 1.022 0 0 0 .032-.158.899.899 0 0 0-.004-.201.769.769 0 0 0-.07-.232.678.678 0 0 0-.082-.138.943.943 0 0 0-.08-.092L17.666 16.5l4.088-4.087a.965.965 0 0 0 .102-.125.93.93 0 0 0 .076-.143.86.86 0 0 0 .061-.314.904.904 0 0 0-.036-.24.72.72 0 0 0-.062-.148.86.86 0 0 0-.236-.273.938.938 0 0 0-.138-.084.867.867 0 0 0-.27-.076.772.772 0 0 0-.282.02.772.772 0 0 0-.257.113.936.936 0 0 0-.125.103L16.5 15.334z" fill="#000"/>
      </svg>
    </button>
    <div class="gg-size-guide-modal__body">
      {%- if section.settings.size_guide_image_mobile != blank and request.display_mode != 'desktop' -%}
        <img
          srcset="{{ section.settings.size_guide_image_mobile | image_url: width: 750 }}"
          src="{{ section.settings.size_guide_image_mobile | image_url: width: 375 }}"
          alt="{{ 'products.product.size_guide' | t }}"
          loading="lazy"
          width="{{ section.settings.size_guide_image_mobile.width }}"
          height="{{ section.settings.size_guide_image_mobile.height }}"
        >
      {%- else -%}
        <img
          srcset="{{ section.settings.size_guide_image | image_url: width: 1500 }}"
          src="{{ section.settings.size_guide_image | image_url: width: 750 }}"
          alt="{{ 'products.product.size_guide' | t }}"
          loading="lazy"
          width="{{ section.settings.size_guide_image.width }}"
          height="{{ section.settings.size_guide_image.height }}"
        >
      {%- endif -%}
    </div>
  </div>
</size-guide-modal>

<script>
  class SizeGuideModal extends HTMLElement {
    constructor() {
      super();
      this.closeButton = this.querySelector('.gg-size-guide-modal__close');
      
      this.closeButton.addEventListener('click', () => this.close());
      this.addEventListener('click', (event) => {
        if (event.target === this) this.close();
      });
      
      // 添加键盘事件监听
      document.addEventListener('keydown', (event) => {
        if (event.key === 'Escape' && this.hasAttribute('open')) {
          this.close();
        }
      });
    }

    open() {
      this.setAttribute('open', '');
      document.body.style.overflow = 'hidden';
      
      // 添加焦点陷阱
      this.querySelector('.gg-size-guide-modal__content').focus();
    }

    close() {
      this.removeAttribute('open');
      document.body.style.overflow = '';
    }
  }

  if (!customElements.get('size-guide-modal')) {
    customElements.define('size-guide-modal', SizeGuideModal);
  }

  // 使用事件委托，为所有尺码表链接绑定点击事件
  document.addEventListener('click', (event) => {
    // 检查点击的元素或其父元素是否是尺码表链接
    const sizeGuideLink = event.target.closest('.gg-size-guide');
    if (sizeGuideLink) {
      event.preventDefault();
      
      // 获取模态框元素
      const sizeGuideModal = document.querySelector('#SizeGuideModal-{{ section.id }}');
      if (sizeGuideModal) {
        try {
          sizeGuideModal.open();
        } catch (error) {
          console.error('Error opening size guide modal:', error);
        }
      } else {
        console.warn('Size guide modal not found');
      }
    }
  });
  
  // 确保模态框在DOM中存在
  document.addEventListener('DOMContentLoaded', () => {
    const sizeGuideModal = document.querySelector('#SizeGuideModal-{{ section.id }}');
    if (!sizeGuideModal) {
      console.warn('Size guide modal not found in DOM');
    }
  });
</script>